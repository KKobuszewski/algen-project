#pragma once

#ifndef _COMMON_DEFINED_H_
#define _COMMON_DEFINED_H_
///////////////////////////////////////////////////////////////////////////////////////////////
// INCLUDE:
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////
// C standard:
#include <stdlib.h>

///////////






///////////////////////////////////////////////////////////////////////////////////////////////
// DEFINED:
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////
// General:

#define MY_NULLPTR NULL			 // Zazwyczaj w ten sposób definiuje standard dla null`a. Jak w trakcie pisania projektu, przychodzi potrzeba by zamiast null korzystaæ nagle z nullptr / nullptr_t zmiana sprowadza siê tylko do tego pliku.

///////////////////////////////////
// Const:

#ifndef M_PI
#define M_PI 3.141592653589793
#endif

///////////////////////////////////
// Print-ing:

#define separator    "///////////////////////////////////////////////////////////////////////////////"

///////////////////////////////////
// Other:

// DESCRIP: (MS VC++ only) defines forced inline if it is available.
#ifdef  _MSC_VER
#define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
#define INLINE inline        /* use standard inline */
#endif

// DESCRIP: (MS VC++ only) function name
#ifdef _MSC_VER
#define __MY_FUNC_NAME__ __FUNCTION__
#else
#define __MY_FUNC_NAME__ __func__
#endif	

///////////

#endif